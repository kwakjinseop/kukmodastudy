/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/xoGg27AEJ11
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"

export default function calendarpage() {
  const [selectedDate, setSelectedDate] = useState(new Date())
  const [posts, setPosts] = useState({
    "2023-08-16": [
      {
        title: "Dinner with friends",
        content: "Going to a new restaurant downtown.",
      },
    ],
    "2023-08-17": [
      {
        title: "Dentist appointment",
        content: "Get my teeth cleaned.",
      },
      {
        title: "Pick up dry cleaning",
        content: "Grab my clothes from the cleaners.",
      },
    ],
    "2023-08-18": [
      {
        title: "Workout at the gym",
        content: "Leg day!",
      },
    ],
  })
  const handleDateClick = (date) => {
    setSelectedDate(date)
  }
  const handlePostSubmit = (title, content) => {
    const formattedDate = selectedDate.toISOString().slice(0, 10)
    setPosts((prevPosts) => ({
      ...prevPosts,
      [formattedDate]: [...(prevPosts[formattedDate] || []), { title, content }],
    }))
  }
  return (
    <div className="flex flex-col h-screen">
      <header className="bg-primary text-primary-foreground py-4 px-6">
        <h1 className="text-2xl font-bold">Calendar</h1>
      </header>
      <div className="flex-1 overflow-auto">
        <div className="grid grid-cols-7 gap-4 p-6">
          {Array.from({ length: 42 }, (_, i) => {
            const date = new Date(
              selectedDate.getFullYear(),
              selectedDate.getMonth(),
              selectedDate.getDate() - (selectedDate.getDay() - (i % 7)),
            )
            const formattedDate = date.toISOString().slice(0, 10)
            const hasPosts = posts[formattedDate]?.length > 0
            return (
              <button
                key={i}
                onClick={() => handleDateClick(date)}
                className={`aspect-square rounded-md transition-colors ${
                  formattedDate === selectedDate.toISOString().slice(0, 10)
                    ? "bg-primary text-primary-foreground"
                    : hasPosts
                    ? "bg-secondary text-secondary-foreground"
                    : "bg-background hover:bg-muted"
                }`}
              >
                {date.getDate()}
              </button>
            )
          })}
        </div>
      </div>
      <div className="bg-muted py-4 px-6">
        {posts[selectedDate.toISOString().slice(0, 10)]?.map((post, index) => (
          <div key={index} className="bg-card text-card-foreground rounded-md p-4 mb-4">
            <h3 className="text-lg font-bold">{post.title}</h3>
            <p className="text-sm">{post.content}</p>
          </div>
        ))}
        <form
          onSubmit={(e) => {
            e.preventDefault()
            const title = e.target.title.value
            const content = e.target.content.value
            handlePostSubmit(title, content)
            e.target.reset()
          }}
          className="bg-card text-card-foreground rounded-md p-4"
        >
          <div className="mb-4">
            <label htmlFor="title" className="block font-bold mb-2">
              Title
            </label>
            <input
              type="text"
              id="title"
              name="title"
              className="w-full rounded-md border-gray-300 focus:border-primary focus:ring-primary"
              required
            />
          </div>
          <div className="mb-4">
            <label htmlFor="content" className="block font-bold mb-2">
              Content
            </label>
            <textarea
              id="content"
              name="content"
              rows={3}
              className="w-full rounded-md border-gray-300 focus:border-primary focus:ring-primary"
              required
            />
          </div>
          <button type="submit" className="bg-primary text-primary-foreground rounded-md px-4 py-2 hover:bg-primary/80">
            Save Post
          </button>
        </form>
      </div>
    </div>
  )
}
